type AvatarBytesArgs = record { image_bytes : vec nat8 };
type CreateResult = record { canister_id : principal };
type Fee = variant { Fixed : nat; RateWithLowestLimit : record { nat; nat8 } };
type IssueTokenArgs = record {
  fee : Fee;
  decimals : nat8;
  owner : principal;
  logo : vec nat8;
  name : text;
  total_supply : nat;
  symbol : text;
};
type Result = variant { Ok; Err };
type Result_1 = variant { Ok : CreateResult; Err : text };
type StoreWASMArgs = record { wasm_module : vec nat8; wasm_type : WasmType };
type WasmType = variant { Life; AvatarNFT; Board; VisaNFT; PABToken };
service : () -> {
  ApplyCitizenship : (text) -> (opt principal);
  BuildCivilization : (principal) -> (principal);
  Citizens : () -> (text) query;
  DeployNFTContract : (WasmType) -> (text);
  DeployTokenContract : () -> (text);
  GenesisCode : () -> (text) query;
  GetInviteCodes : () -> (vec text);
  Hi : () -> (text) query;
  Initialize : () -> (Result);
  IssuePAB : (IssueTokenArgs) -> (Result_1);
  PauseBoard : (principal) -> ();
  RequestAvatarNft : (AvatarBytesArgs) -> (text);
  ResumeBoard : (principal) -> ();
  Sleep : (principal) -> ();
  UpgradeCanister : (principal, WasmType) -> ();
  WakeUp : (principal) -> ();
  setFeeTokenID : (principal) -> ();
  uploadWasm : (StoreWASMArgs) -> ();
}